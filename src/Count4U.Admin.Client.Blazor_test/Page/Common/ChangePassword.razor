@page "/changepassword"
@inherits ChangePasswordBase


@if (_changePasswordModel == null)
{
    <p><em>Loading...</em></p>
}
else
{
<div class="card" style="border:none">
    <div class="card-body" style="border:none">
        <h4>@LocalizationResources.Change_Password</h4>
        <EditForm Model="@_changePasswordModel" OnValidSubmit="ChangePasswordAsync">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-group">
                <label for="email">@LocalizationResources.Register_Email_address</label>
                <label for="email">@_changePasswordModel.Email</label>
                <ValidationMessage For="@(() => _changePasswordModel.Email)" />
            </div>
            <div class="form-group">
                <label for="oldpassword">@LocalizationResources.Old_Password</label>
                <InputText id="oldpassword" class="form-control" @bind-Value="@_changePasswordModel.OldPassword" />
                <ValidationMessage For="@(() => _changePasswordModel.OldPassword)" />
            </div>

            <div class="form-group">
                <label for="newpassword"> @LocalizationResources.New_Password</label>
                <InputText id="newpassword" class="form-control" @bind-Value="@_changePasswordModel.NewPassword" />
                <ValidationMessage For="@(() => _changePasswordModel.NewPassword)" />
            </div>
            <div class="form-group">
                <label for="confirmpassword">@LocalizationResources.Confirm_Password</label>
                <InputText id="confirmpassword" class="form-control" @bind-Value="@_changePasswordModel.ConfirmPassword" />
                <ValidationMessage For="@(() => _changePasswordModel.ConfirmPassword)" />
            </div>

            <button type="submit" class="btn btn btn-success">@LocalizationResources.Login_Submit</button>
            @*<button class="btn btn-outline-success" @onclick="@NavigateToRegister">@LocalizationResources.Login_Register</button>*@
            @if (this._changePasswordResult != null)
            {
                @if (this._changePasswordResult.Successful == SuccessfulEnum.Successful)
                {
                    <div class="alert alert-success" role="alert">
                        <p>@LocalizationResources.Register_Registered_Successfuly</p>
                    </div>
                }

                @if (this._changePasswordResult.Successful == SuccessfulEnum.NotSuccessful)
                {
                    <div class="alert alert-danger" role="alert">
                        <p>@LocalizationResources.Register_Cant_register</p>
                        <p>@this._changePasswordResult.Error</p>
                    </div>
                }
            }
        </EditForm>
    </div>
</div>

}
    @*@code{


            ChangePasswordCommand _changePasswordModel = new ChangePasswordCommand();

            async Task ChangePasswordExcute()
            {

                await Http.Create("/api/account/changePassword")
                    .OnBadRequest<Dictionary<string, List<string>>>(errors => serverSideValidator.DisplayErrors(errors))
                    .OnOK(() =>
                    {
                        messageService.Info("Password changed successfully");
                        command = new ChangePasswordCommand();
                    })
                    .Post(command);
                StateHasChanged();
            }
        }*@
